# Generated by Django 5.2.3 on 2025-08-23 02:10

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=300, null=True)),
                ('name_of_the_person_in_charge', models.CharField(max_length=150)),
                ('email_of_the_person_in_charge', models.TextField()),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'company"."company',
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_color', models.CharField(default='#075FAF', max_length=7)),
                ('secondary_color', models.CharField(default='#074c8dff', max_length=7)),
                ('button_color', models.CharField(default='#075FAF', max_length=7)),
                ('button_success', models.CharField(default='#075FAF', max_length=7)),
                ('currency_type', models.CharField(default='MXN', max_length=5)),
                ('favicon', models.ImageField(blank=True, null=True, upload_to='favicons/')),
                ('font_family', models.CharField(default='Inter', max_length=100)),
                ('currency_symbol', models.CharField(default='$', max_length=5)),
                ('decimal_separator', models.CharField(default='.', max_length=1)),
                ('thousands_separator', models.CharField(default=',', max_length=1)),
                ('currency_position', models.CharField(choices=[('before', 'Antes del número'), ('after', 'Después del número')], default='before', max_length=10)),
                ('language', models.CharField(default='es', max_length=10)),
                ('timezone', models.CharField(default='America/Mexico_City', max_length=50)),
                ('date_format', models.CharField(default='DD/MM/YYYY', max_length=20)),
            ],
            options={
                'db_table': 'company"."setting',
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_branch', models.CharField(max_length=500)),
                ('nickname', models.CharField(max_length=100, null=True)),
                ('email_branch', models.TextField(null=True)),
                ('name_of_the_person_in_charge', models.TextField(null=True)),
                ('email_of_the_person_in_charge', models.TextField(null=True)),
                ('country', models.CharField(max_length=2, null=True)),
                ('address', models.TextField(null=True)),
                ('postal_code', models.CharField(max_length=10, null=True)),
                ('cellphone', models.CharField(max_length=25, null=True)),
                ('phone', models.CharField(max_length=25, null=True)),
                ('support_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('notification_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('whatsapp_number', models.CharField(blank=True, max_length=20, null=True)),
                ('website', models.TextField(null=True)),
                ('user_google', models.TextField(null=True)),
                ('password_google', models.TextField(null=True)),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('activated', models.BooleanField(default=True)),
                ('id_company', models.ForeignKey(db_column='id_company', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.company')),
            ],
            options={
                'db_table': 'company"."branch',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=600)),
                ('address', models.TextField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=2, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('hiring_date', models.DateField(blank=True, null=True)),
                ('path_photo', models.TextField(blank=True, null=True)),
                ('cellphone', models.CharField(blank=True, max_length=20, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('id_branch', models.ForeignKey(db_column='id_branch', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.branch')),
                ('id_company', models.ForeignKey(db_column='id_company', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.company')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Permit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('activated', models.BooleanField(default=True)),
                ('view_permits', models.BooleanField(default=True)),
                ('edit_permits', models.BooleanField(default=True)),
                ('delete_permits', models.BooleanField(default=True)),
                ('id_company', models.ForeignKey(db_column='id_company', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.company')),
            ],
            options={
                'db_table': 'company"."permits',
            },
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(null=True)),
                ('activated', models.BooleanField(default=True)),
                ('id_company', models.ForeignKey(db_column='id_company', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.company')),
            ],
            options={
                'db_table': 'company"."user_type',
            },
        ),
    ]
