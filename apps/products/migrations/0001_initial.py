# Generated by Django 5.2.3 on 2025-09-07 19:53

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Presentation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nombre de la presentaci칩n, ej: C치psula, Tableta, Jarabe, Porci칩n, Botella 500ml', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='Opcional, detalles adicionales', null=True)),
            ],
            options={
                'db_table': 'products.presentation',
            },
        ),
        migrations.CreateModel(
            name='UnitOfMeasure',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Unit of Measure',
                'verbose_name_plural': 'Units of Measure',
                'db_table': 'products.unit_of_measure',
            },
        ),
        migrations.CreateModel(
            name='Pack',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('image1', models.ImageField(blank=True, null=True, upload_to='products/')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='products/')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='products/')),
                ('image4', models.ImageField(blank=True, null=True, upload_to='products/')),
                ('skus', models.JSONField(blank=True, default=list)),
                ('alternate_skus', models.JSONField(blank=True, default=list, help_text='Alternative codes or keywords', null=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('base_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('price_with_taxes', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('activated', models.BooleanField(default=True)),
                ('tags', models.JSONField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('pack_type', models.IntegerField(choices=[(0, 'product'), (1, 'service'), (2, 'pack/combo')], default=1, help_text='Tipo de pack')),
                ('id_company', models.BigIntegerField(blank=True)),
            ],
            options={
                'db_table': 'products.packs',
                'indexes': [models.Index(fields=['name'], name='idx_pack_name'), models.Index(fields=['skus'], name='idx_pack_sku'), models.Index(fields=['id_company'], name='idx_pack_id_company'), models.Index(fields=['activated'], name='idx_pack_activated')],
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('activated', models.BooleanField(default=True)),
                ('id_company', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'products.product_category',
                'indexes': [models.Index(fields=['name'], name='idx_category_name'), models.Index(fields=['id_company'], name='idx_category_company')],
            },
        ),
        migrations.CreateModel(
            name='ProductDepartment',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('activated', models.BooleanField(default=True)),
                ('id_company', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'products.product_department',
                'indexes': [models.Index(fields=['name'], name='idx_department_name'), models.Index(fields=['id_company'], name='idx_department_company')],
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('promo_type', models.CharField(choices=[('percentage', 'Porcentaje'), ('fixed', 'Monto fijo')], default='percentage', max_length=20)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('days_of_week', models.JSONField(blank=True, null=True)),
                ('start_hour', models.TimeField(blank=True, null=True)),
                ('end_hour', models.TimeField(blank=True, null=True)),
                ('id_company', models.BigIntegerField(blank=True, null=True)),
                ('activated', models.BooleanField(default=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('packs', models.ManyToManyField(blank=True, related_name='promotions', to='products.pack')),
            ],
            options={
                'db_table': 'products.promotion',
            },
        ),
        migrations.CreateModel(
            name='PromotionQuantityTier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_quantity', models.PositiveIntegerField()),
                ('discount_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('promotion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quantity_tiers', to='products.promotion')),
            ],
            options={
                'db_table': 'products.promotion_quantity_tier',
                'ordering': ['min_quantity'],
            },
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('rate', models.DecimalField(decimal_places=2, help_text='Porcentaje del impuesto, ej: 16 para 16%', max_digits=5)),
                ('description', models.TextField(blank=True, null=True)),
                ('activated', models.BooleanField(default=True)),
                ('id_company', models.BigIntegerField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'products.tax',
                'indexes': [models.Index(fields=['name'], name='idx_tax_name'), models.Index(fields=['id_company'], name='idx_tax_company')],
            },
        ),
        migrations.CreateModel(
            name='PackTax',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pack', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taxes', to='products.pack')),
                ('tax', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='packs', to='products.tax')),
            ],
            options={
                'db_table': 'products.pack_tax',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/')),
                ('sku', models.CharField(blank=True, max_length=100, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('this_product_use_inventory', models.BooleanField(default=True)),
                ('quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('min', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('max', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('this_product_discounts_batches_automatically', models.BooleanField(default=True)),
                ('activated', models.BooleanField(default=True)),
                ('id_company', models.BigIntegerField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('presentation', models.ForeignKey(blank=True, help_text='Presentaci칩n del producto', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='products.presentation')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='products.productcategory')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='categories', to='products.productdepartment')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='products.unitofmeasure')),
            ],
            options={
                'db_table': 'products.product',
            },
        ),
        migrations.AddField(
            model_name='presentation',
            name='unit',
            field=models.ForeignKey(blank=True, help_text='Unidad base de la presentaci칩n, ej: ml, g, pieza', null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.unitofmeasure'),
        ),
        migrations.CreateModel(
            name='PackItem',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('quantity_min', models.DecimalField(decimal_places=2, default=1, max_digits=10)),
                ('quantity_max', models.DecimalField(decimal_places=2, default=1, max_digits=10)),
                ('wastage_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('required', models.BooleanField(default=True)),
                ('extra_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('needs_prescription', models.BooleanField(default=False)),
                ('show_this_item_in_the_ticket', models.BooleanField(default=False)),
                ('pack', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='products.pack')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_packs', to='products.product')),
            ],
            options={
                'db_table': 'products.pack_item',
                'unique_together': {('pack', 'product')},
            },
        ),
        migrations.CreateModel(
            name='ProductBatch',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('batch_code', models.CharField(blank=True, max_length=100, null=True)),
                ('quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('manufacture_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('id_company', models.BigIntegerField(blank=True, null=True)),
                ('activated', models.BooleanField(default=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batches', to='products.product')),
            ],
            options={
                'db_table': 'products.product_batch',
                'indexes': [models.Index(fields=['product'], name='idx_batch_product'), models.Index(fields=['batch_code'], name='idx_batch_code'), models.Index(fields=['expiry_date'], name='idx_batch_expiry')],
            },
        ),
        migrations.AddIndex(
            model_name='promotion',
            index=models.Index(fields=['name'], name='idx_promotion_name'),
        ),
        migrations.AddIndex(
            model_name='promotion',
            index=models.Index(fields=['start_date', 'end_date'], name='idx_promotion_date'),
        ),
        migrations.AddIndex(
            model_name='promotion',
            index=models.Index(fields=['id_company'], name='idx_promotion_company'),
        ),
        migrations.AlterUniqueTogether(
            name='packtax',
            unique_together={('pack', 'tax')},
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name'], name='idx_product_name'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['sku'], name='idx_product_sku'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['id_company'], name='idx_product_id_company'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['activated'], name='idx_product_activated'),
        ),
        migrations.AddIndex(
            model_name='presentation',
            index=models.Index(fields=['name'], name='idx_presentation_name'),
        ),
    ]
