# Generated by Django 5.2.3 on 2025-09-19 03:23

import django.db.models.deletion
import encrypted_model_fields.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('agenda', '0001_initial'),
        ('core', '0003_alter_branch_company'),
        ('customers', '0005_rename_celular_customer_cellphone_customer_gender_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Specialty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='specialty', to='core.branch')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='specialty', to='core.company')),
            ],
        ),
        migrations.CreateModel(
            name='ProfessionalData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_number', models.CharField(max_length=50, unique=True)),
                ('phone', encrypted_model_fields.fields.EncryptedCharField(blank=True, db_column='phone', null=True)),
                ('email', encrypted_model_fields.fields.EncryptedCharField(blank=True, db_column='email', null=True)),
                ('office_address', encrypted_model_fields.fields.EncryptedCharField(blank=True, db_column='office_address', null=True)),
                ('license_country', models.CharField(blank=True, max_length=2, null=True)),
                ('university', encrypted_model_fields.fields.EncryptedCharField(blank=True, db_column='university', null=True)),
                ('degree_title', models.CharField(blank=True, max_length=150, null=True)),
                ('years_of_experience', models.PositiveIntegerField(blank=True, null=True)),
                ('license_expiration_date', models.DateField(blank=True, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('linkedin_profile', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='professional_data', to=settings.AUTH_USER_MODEL)),
                ('specialties', models.ManyToManyField(related_name='professional_data', to='services.specialty')),
            ],
        ),
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skull', models.CharField(max_length=100)),
                ('priority', models.SmallIntegerField(default=0)),
                ('topic', encrypted_model_fields.fields.EncryptedTextField(blank=True, null=True)),
                ('discussion_points', encrypted_model_fields.fields.EncryptedTextField(blank=True, null=True)),
                ('conclusions', encrypted_model_fields.fields.EncryptedTextField(blank=True, null=True)),
                ('action_items', encrypted_model_fields.fields.EncryptedTextField(blank=True, null=True)),
                ('notes', encrypted_model_fields.fields.EncryptedTextField(blank=True, null=True)),
                ('attachments', encrypted_model_fields.fields.EncryptedTextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('scheduled', 'scheduled'), ('completed', 'completed'), ('canceled', 'Canceled')], default='scheduled', max_length=10)),
                ('consultation_type', models.CharField(choices=[('in_person', 'In Person'), ('online', 'Online'), ('home', 'Home'), ('remote', 'Remote')], default='in_person', max_length=20)),
                ('price', models.DecimalField(blank=True, decimal_places=2, help_text='Precio de la consulta', max_digits=10, null=True)),
                ('currency', models.CharField(default='MXN', help_text='Query currency (example. MXN, USD, EUR)', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('history_information', encrypted_model_fields.fields.EncryptedTextField(blank=True, null=True)),
                ('appoint', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='consultation', to='agenda.appointment')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='consultation', to='core.branch')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='consultation', to='core.company')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='consultation', to='customers.customer')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultations_updated', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultations_created', to=settings.AUTH_USER_MODEL)),
                ('professional', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='consultation', to='services.professionaldata')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('company', 'skull'), name='unique_skull_per_company_consultation')],
            },
        ),
    ]
